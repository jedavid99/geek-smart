[{"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\index.js":"1","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\App.js":"2","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\reportWebVitals.js":"3","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Login.jsx":"4","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Menu.jsx":"5","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Registrar.jsx":"6","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Listar.jsx":"7","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\charp.jsx":"8","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Estadistica.jsx":"9","C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\charp-clien.jsx":"10","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\index.js":"11","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\reportWebVitals.js":"12","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\App.js":"13","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Login.jsx":"14","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Menu.jsx":"15","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Registrar.jsx":"16","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Listar.jsx":"17","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\provedores\\provedore-list.jsx":"18","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\provedores\\provedor-agre.jsx":"19","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Saibar.jsx":"20","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Estadisticas.jsx":"21","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\layouts\\LayoutPrincipal.jsx":"22","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Proveedores.jsx":"23","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Home.jsx":"24","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Estadistica.jsx":"25","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\home\\charp.jsx":"26","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\home\\charp-clien.jsx":"27","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\home\\time-line.jsx":"28","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\home\\TablaClientHome.jsx":"29","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\servicioTelefonos\\TablasTelefono.jsx":"30","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\ListaTelefono.jsx":"31","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\servicioTelefonos\\NuevoClienteTele.jsx":"32","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\ListaPc.jsx":"33","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\servicioPc\\TablaPC.jsx":"34","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\modal\\ModalEstatud.jsx":"35","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\servicioPc\\NuevoClientePc.jsx":"36","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\ListaOtros.jsx":"37","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\otrosServicios\\TablasOtros.jsx":"38","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\otrosServicios\\NuevoClienteOtros.jsx":"39","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Reporte.jsx":"40","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Report\\TablaReport.jsx":"41","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Report\\EstaditicaReport.jsx":"42","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\UsuariosTabla.jsx":"43","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\AgregarUsuario.jsx":"44","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\ListaUsuario.jsx":"45","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\OpcionesEditar.jsx":"46","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\DatosEmpresa.jsx":"47","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Maps.jsx":"48","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Empresa.jsx":"49","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Usuarios.jsx":"50","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Empresa\\LogoEmpresa.jsx":"51","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Empresa\\BotonConfigEmpres.jsx":"52","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Empresa\\EditarLogo.jsx":"53","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Empresa\\EditarDatosEmpresa.jsx":"54"},{"size":535,"mtime":1716087284931,"results":"55","hashOfConfig":"56"},{"size":393,"mtime":1716140592304,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":1650138055170,"results":"58","hashOfConfig":"56"},{"size":4578,"mtime":1716317011944,"results":"59","hashOfConfig":"56"},{"size":5612,"mtime":1716338806568,"results":"60","hashOfConfig":"56"},{"size":3026,"mtime":1715994604465,"results":"61","hashOfConfig":"56"},{"size":1773,"mtime":1716253079395,"results":"62","hashOfConfig":"56"},{"size":885,"mtime":1716337493873,"results":"63","hashOfConfig":"56"},{"size":2407,"mtime":1650156525161,"results":"64","hashOfConfig":"56"},{"size":1052,"mtime":1716338585404,"results":"65","hashOfConfig":"56"},{"size":513,"mtime":1716829661302,"results":"66","hashOfConfig":"67"},{"size":362,"mtime":1650138055170,"results":"68","hashOfConfig":"67"},{"size":1534,"mtime":1716924798106,"results":"69","hashOfConfig":"67"},{"size":4584,"mtime":1716830269005,"results":"70","hashOfConfig":"67"},{"size":7434,"mtime":1716653596902,"results":"71","hashOfConfig":"67"},{"size":3026,"mtime":1715994604465,"results":"72","hashOfConfig":"67"},{"size":1496,"mtime":1716501203587,"results":"73","hashOfConfig":"67"},{"size":2023,"mtime":1716651924885,"results":"74","hashOfConfig":"67"},{"size":4347,"mtime":1716519153805,"results":"75","hashOfConfig":"67"},{"size":16964,"mtime":1716334911130,"results":"76","hashOfConfig":"67"},{"size":226,"mtime":1716588981273,"results":"77","hashOfConfig":"67"},{"size":4112,"mtime":1716924861291,"results":"78","hashOfConfig":"67"},{"size":2125,"mtime":1716652577722,"results":"79","hashOfConfig":"67"},{"size":458,"mtime":1716654529329,"results":"80","hashOfConfig":"67"},{"size":2407,"mtime":1650156525161,"results":"81","hashOfConfig":"67"},{"size":2871,"mtime":1716497096306,"results":"82","hashOfConfig":"67"},{"size":1052,"mtime":1716338585404,"results":"83","hashOfConfig":"67"},{"size":1030,"mtime":1716499906400,"results":"84","hashOfConfig":"67"},{"size":1505,"mtime":1716653776524,"results":"85","hashOfConfig":"67"},{"size":7419,"mtime":1716845280124,"results":"86","hashOfConfig":"67"},{"size":476,"mtime":1716830113245,"results":"87","hashOfConfig":"67"},{"size":4509,"mtime":1716659062043,"results":"88","hashOfConfig":"67"},{"size":420,"mtime":1716848589001,"results":"89","hashOfConfig":"67"},{"size":7385,"mtime":1716845317528,"results":"90","hashOfConfig":"67"},{"size":1699,"mtime":1716839975641,"results":"91","hashOfConfig":"67"},{"size":4484,"mtime":1716845620538,"results":"92","hashOfConfig":"67"},{"size":423,"mtime":1716849565804,"results":"93","hashOfConfig":"67"},{"size":7409,"mtime":1716847494343,"results":"94","hashOfConfig":"67"},{"size":4506,"mtime":1716847372811,"results":"95","hashOfConfig":"67"},{"size":762,"mtime":1716853150082,"results":"96","hashOfConfig":"67"},{"size":6885,"mtime":1716853377079,"results":"97","hashOfConfig":"67"},{"size":3743,"mtime":1716852263893,"results":"98","hashOfConfig":"67"},{"size":5833,"mtime":1716855791742,"results":"99","hashOfConfig":"67"},{"size":4996,"mtime":1716857704641,"results":"100","hashOfConfig":"67"},{"size":868,"mtime":1716920591440,"results":"101","hashOfConfig":"67"},{"size":611,"mtime":1716921191733,"results":"102","hashOfConfig":"67"},{"size":983,"mtime":1716953780579,"results":"103","hashOfConfig":"67"},{"size":947,"mtime":1716936530521,"results":"104","hashOfConfig":"67"},{"size":551,"mtime":1716929803024,"results":"105","hashOfConfig":"67"},{"size":265,"mtime":1716924812559,"results":"106","hashOfConfig":"67"},{"size":204,"mtime":1716934321063,"results":"107","hashOfConfig":"67"},{"size":1868,"mtime":1716953661781,"results":"108","hashOfConfig":"67"},{"size":974,"mtime":1716939340078,"results":"109","hashOfConfig":"67"},{"size":3975,"mtime":1716954105592,"results":"110","hashOfConfig":"67"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11om558",{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"3wgaqb",{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"144"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"144"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"144"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"144"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"144"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"144"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"144"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"144"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"144"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"144"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"144"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"144"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"144"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"144"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"144"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\index.js",[],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\App.js",[],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\reportWebVitals.js",[],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Login.jsx",["291","292"],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Menu.jsx",["293","294","295","296","297","298","299","300"],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Registrar.jsx",[],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Listar.jsx",["301"],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\charp.jsx",["302"],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\Estadistica.jsx",[],[],"C:\\Users\\david\\Documents\\geek-smart-ser\\src\\components\\charp-clien.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\index.js",[],[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\reportWebVitals.js",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\App.js",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Login.jsx",["303","304"],[],"import React, { useState } from 'react'\r\n\r\nimport Logo from '../assets/img/geeksmart.jpg';\r\nimport { Button, message, Space } from 'antd';\r\nimport { Home } from '../paginas/Home';\r\n\r\nexport const Login = () => {\r\n\r\n  const [miLogin, setMiLogin] = useState(\"false\");\r\n  const [usu, setUsu] = useState(\"\");\r\n  const [pas, setPas] = useState(\"\");\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n\r\n  function iniciarSesion(e){\r\n    e.preventDefault();\r\n    var txtusu = document.getElementById(\"txtusu\").value;\r\n    var txtpas = document.getElementById(\"txtpas\").value;\r\n    if(txtusu.length===0 || txtpas.length===0){\r\n     warning ();\r\n\r\n\r\n\r\n      \r\n      \r\n    }else{\r\n      if(usu === \"admin\" && pas===\"123\"){\r\n        setMiLogin(\"true\");\r\n        document.getElementById(\"login\").style.display = \"none\";\r\n      }else{\r\n        setMiLogin(\"false\");\r\n        error  ();\r\n        document.getElementById(\"txtusu\").value = \"\";\r\n        document.getElementById(\"txtpas\").value = \"\";\r\n        document.getElementById(\"txtusu\").focus();\r\n\r\n\r\n       \r\n        \r\n      }\r\n    }\r\n  }\r\n  \r\n  const error = () => {\r\n    messageApi.open({\r\n      type: 'error',\r\n      content: 'La Contraseña o el Usuario que ingresaste son incorrecta.',\r\n      className: 'custom-class',\r\n      style: {\r\n        marginTop: '10vh'},\r\n    });\r\n  };\r\n  const warning = () => {\r\n    messageApi.open({\r\n      type: 'warning',\r\n      content: 'Por favor, introduce los datos requeridos para continuar.',\r\n      className: 'custom-class',\r\n      style: {\r\n        marginTop: '10vh'},\r\n    });\r\n  };\r\n\r\n  return (\r\n    \r\n\r\n<>\r\n\r\n{contextHolder}\r\n      <Space>\r\n        \r\n       \r\n        \r\n      </Space>\r\n<section id=\"login\" >\r\n  <div className=\"px-4 py-12 mx-auto max-w-7xl  sm:px-6 md:px-12 lg:px-24 lg:py-24\">\r\n    <div className=\"justify-center mx-auto text-left align-bottom form-login transition-all transform bg-white rounded-lg \">\r\n      <div className=\"grid flex-wrap items-center justify-center grid-cols-1 mx-auto shadow-xl lg:grid-cols-2 rounded-xl\">\r\n        <div className=\"w-full px-6 py-3\">\r\n          <div>\r\n            <div className=\"mt-3 text-left sm:mt-5\">\r\n              <div className=\"inline-flex items-center w-full\">\r\n                <h3 className=\"text-lg font-bold text-neutral-600 l eading-6 lg:text-4xl\">Login</h3>\r\n              </div>\r\n              <div className=\"mt-4 text-base text-gray-500\">\r\n                <p>Si posee una cuenta, por favor, inicie sesión.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <form action=\"\" >\r\n          <div className=\"mt-6 space-y-7\">\r\n           \r\n            <div>\r\n              <label   htmlFor=\"txtusu\" className=\"sr-only\">Usuario</label>\r\n              <input type=\"text\" name=\"email\" id=\"txtusu\" className=\"block w-full px-3 py-2 text-base text-neutral-600 placeholder-gray-300 transition duration-500 ease-in-out transform border border-transparent rounded-lg bg-gray-50 focus:outline-none focus:border-transparent focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-300\" placeholder=\"Ingrese su usuario\"  onChange={ (e)=>setUsu(e.target.value) }  required />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"txtpas\"  className=\"sr-only\">Contraseña</label>\r\n              <input type=\"text\" name=\"password\" id=\"txtpas\" className=\"block w-full px-3 py-2 text-base text-neutral-600 placeholder-gray-300 transition duration-500 ease-in-out transform border border-transparent rounded-lg bg-gray-50 focus:outline-none focus:border-transparent focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-300\" placeholder=\"Ingrese su contraseña\"  onChange={ (e)=>setPas(e.target.value) }  required/>\r\n            </div>\r\n            <div className=\"flex flex-col mt-4 lg:space-y-5\">\r\n              <button type=\"button\" className=\"flex items-center justify-center w-full px-10 py-2 text-base font-medium text-center text-white transition duration-500 ease-in-out transform bg-blue-600 rounded-xl hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"  onClick={ iniciarSesion } >iniciar Seccion</button>\r\n             \r\n            </div>\r\n           \r\n          </div>\r\n           </form>\r\n        </div>\r\n        <div className=\"order-first hidden w-full lg:block\">\r\n          <img className=\"object-cover servi-log bg-cover rounded-l-lg mx-auto  space-y-6\" src={Logo}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n  \r\n</section>\r\n{ miLogin === \"true\" && <Home usu={usu}/> } \r\n</>\r\n  )\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Menu.jsx",["305","306","307","308","309","310","311","312","313","314","315","316","317","318"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Registrar.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Listar.jsx",["319","320","321","322"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\provedores\\provedore-list.jsx",["323","324","325","326","327"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\provedores\\provedor-agre.jsx",["328","329","330"],[],"import { PlusCircleFilled,QuestionCircleOutlined,PlusOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Col, DatePicker, Drawer, Form, Input, Row, Select, Space ,FloatButton} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Flobott = () =>  {\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = () => { setOpen(true); };\r\n  const onClose = () => { setOpen(false);};\r\n\r\n  return (\r\n\r\n  < >\r\n    \r\n  \r\n      <FloatButton />\r\n      <FloatButton icon={<PlusCircleFilled />} onClick={showDrawer} tooltip={<div>Agregar provedor</div>} />\r\n\r\n    \r\n      <Drawer\r\n        title=\"Agregar provedor\"\r\n        width={720}\r\n        onClose={onClose}\r\n        open={open}\r\n        styles={{\r\n          body: {\r\n            paddingBottom: 80,\r\n          },\r\n        }}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={onClose}>Cancelar</Button>\r\n            <Button onClick={onClose} type=\"primary\">\r\n              Agregar\r\n            </Button>\r\n          </Space>\r\n        }\r\n      >\r\n        <Form layout=\"vertical\" hideRequiredMark>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"name\"\r\n                label=\"Provedor\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el nombre del proveedor',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nombre del proveedor\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"owner\"\r\n                label=\"Categoria del provedor\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor Seleccione la categoria del provedor',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select placeholder=\"Seleccione la categoria\">\r\n                  <Option value=\"Telefonos\">Telefonos</Option>\r\n                  <Option value=\"Pc\">Pc</Option>\r\n                  <Option value=\"varios\">varios</Option>\r\n\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              \r\n            </Col>\r\n            <Col span={12}>\r\n              \r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"approver\"\r\n                label=\"Calidad del provedor\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'calidad del provedor',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select placeholder=\"Seleccione la calidad del provedor\">\r\n                  <Option value=\"buena\">Buena</Option>\r\n                  <Option value=\"regular\">Regular</Option>\r\n                 \r\n\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"url\"\r\n                label=\"Numero de telefono\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresar numero de telefono del proveedor',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  addonBefore=\"+54\"\r\n                 \r\n                  placeholder=\" Ingresar numero de telefono\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Direccion\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Direccion del provedor',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.TextArea rows={4} placeholder=\"por favor ingresar la direccion\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n      \r\n\r\n  </>\r\n  \r\n)\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Saibar.jsx",["331"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Estadisticas.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\layouts\\LayoutPrincipal.jsx",["332","333","334","335","336","337","338","339","340"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Proveedores.jsx",["341","342","343","344"],[],"import React, { useState } from 'react';\r\nimport { LayoutPrincipal } from '../layouts/LayoutPrincipal'\r\n\r\nimport { Divider, Radio, Table } from 'antd';\r\nimport { Flobott } from '../components/provedores/provedor-agre';\r\nconst columns = [\r\n  {\r\n    title: 'Provedores',\r\n    dataIndex: 'provedores',\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Categoria',\r\n    dataIndex: 'categoria',\r\n  },\r\n  {\r\n    title: 'Numero de telefono',\r\n    dataIndex: 'NumeroDtelefono',\r\n  },\r\n  {\r\n    title: 'dirrecion',\r\n    dataIndex: 'dirrecion',\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    provedores: 'John Brown',\r\n    categoria: 'telefono',\r\n    NumeroDtelefono: 1151747883,\r\n    dirrecion: 'capital 34 av'\r\n  },\r\n  {\r\n    key: '2',\r\n    provedores: 'Jim Green',\r\n    categoria: 'pc',\r\n    NumeroDtelefono: 1151747883,\r\n    dirrecion:'capital 34 av',\r\n  },\r\n  {\r\n    key: '3',\r\n    provedores: 'Joe Black',\r\n    categoria: 'pc',\r\n    NumeroDtelefono: 1151747883,\r\n    dirrecion:'capital 34 av',\r\n  },\r\n  {\r\n    key: '4',\r\n    provedores: 'Disabled User',\r\n    categoria: 'varios',\r\n    NumeroDtelefono: 1151747883,\r\n    dirrecion:'capital 34 av',\r\n  },\r\n  {\r\n    key: '4',\r\n    provedores: 'Disabled User',\r\n    categoria: 'telefono',\r\n    NumeroDtelefono: 1151747883,\r\n    dirrecion:'capital 34 av',\r\n  },\r\n  \r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: (record) => ({\r\n    disabled: record.name === 'Disabled User',\r\n    // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Proveedores = () => {\r\n  const [selectionType, setSelectionType] = useState('checkbox');\r\n  return (\r\n\r\n    <LayoutPrincipal>\r\n      <br />\r\n\r\n      <br />\r\n     <Table\r\n        rowSelection={{\r\n          type: selectionType,\r\n          ...rowSelection,\r\n        }}\r\n        columns={columns}\r\n        dataSource={data}\r\n      />\r\n<Flobott/>\r\n    </LayoutPrincipal>\r\n  )\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Home.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Estadistica.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\home\\charp.jsx",["345"],[],"import React from 'react';\r\nimport { Flex, Progress, Card, Space,Typography ,Tooltip,Col, Row, Statistic} from 'antd';\r\nimport { ArrowDownOutlined, ArrowUpOutlined } from '@ant-design/icons';\r\n\r\nexport const Charp = () => (\r\n  <Flex  style={{ marginTop: 12, marginLeft:1 }} gap=\"middle\" vertical>\r\n   \r\n  \r\n    \r\n   \r\n\r\n    <Space  size={20}>\r\n  <Card className='flex px-1  w-full max-w-100'\r\n    \r\n   \r\n  >      <Tooltip title=\"Servcios nuevos\">\r\n\r\n      <Progress className='px-2 ' strokeColor=\"#40A2E3\"  size={[80, 20]} strokeWidth={12}  type=\"dashboard\" percent={50} status=\"active\" />\r\n      </Tooltip>\r\n   \r\n     \r\n     \r\n  </Card>\r\n\r\n\r\n\r\n  <Card className='flex px-1  w-full max-w-100'\r\n    \r\n   \r\n    >      \r\n     <Tooltip  title=\"Equipos por presupuesto\" >\r\n        <Progress className='px-2  ' strokeColor=\"#87A922\"  size={[80, 20]}  strokeWidth={12} type=\"dashboard\"  percent={20} status=\"active\" />\r\n        </Tooltip>\r\n       \r\n       \r\n    </Card>\r\n    <Card className='flex px-1  w-full max-w-100'\r\n    \r\n   \r\n    >      \r\n     <Tooltip title=\"Garantias\">\r\n      <Progress  className='px-2 ' strokeColor=\"#B80000\"  size={[80, 20]}  strokeWidth={12}  type=\"dashboard\"  percent={60} status=\"active\" />\r\n       \r\n      </Tooltip>\r\n    </Card>\r\n\r\n    <Card className='flex px-1  w-full max-w-100'\r\n    \r\n   \r\n    >      \r\n     <Tooltip title=\"telefonos\">\r\n      <Progress  className='px-2 ' strokeColor=\"#151515\"  size={[80, 20]}  strokeWidth={12}  type=\"dashboard\"  percent={90} status=\"active\" />\r\n       \r\n      </Tooltip>\r\n    </Card>\r\n    <Card className='flex px-1  w-full max-w-100'\r\n    \r\n   \r\n    >      \r\n     <Tooltip title=\"Pc\">\r\n      <Progress  className='px-2 ' strokeColor=\"#F97300\"  size={[80, 20]}  strokeWidth={12}  type=\"dashboard\"  percent={30} status=\"active\" />\r\n       \r\n      </Tooltip>\r\n    </Card>\r\n    <Card className='flex px-1  w-full max-w-100'\r\n    \r\n   \r\n    >      \r\n     <Tooltip title=\"Otros equpipos\">\r\n      <Progress  className='px-2 ' strokeColor=\"#0E46A3\"  size={[80, 20]}  strokeWidth={12}  type=\"dashboard\"  percent={10} status=\"active\" />\r\n       \r\n      </Tooltip>\r\n    </Card>\r\n\r\n \r\n</Space>\r\n<Row gutter={16}>\r\n    <Col span={12}>\r\n      <Card size={[80, 20]} bordered={false} className='flex px-2  w-full max-w-100'> \r\n        <Statistic\r\n          title=\"Equipos reparados\"\r\n          value={11.28}\r\n          precision={2}\r\n          valueStyle={{ color: '#3f8600' }}\r\n          prefix={<ArrowUpOutlined />}\r\n          suffix=\"%\"\r\n        />\r\n      </Card>\r\n    </Col>\r\n    <Col span={12}>\r\n      <Card bordered={false}>\r\n        <Statistic\r\n          title=\"Garantias\"\r\n          value={9.3}\r\n          precision={2}\r\n          valueStyle={{ color: '#cf1322' }}\r\n          prefix={<ArrowDownOutlined />}\r\n          suffix=\"%\"\r\n        />\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n<br />\r\n\r\n  </Flex>\r\n\r\n  \r\n  \r\n)","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\home\\charp-clien.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\home\\time-line.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\home\\TablaClientHome.jsx",["346","347","348","349"],[],"\r\nimport React, { useState } from 'react';\r\nimport { Divider, Radio, Table } from 'antd';\r\nconst columns = [\r\n  {\r\n    title: 'Nombre',\r\n    dataIndex: 'name',\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Servicio',\r\n    dataIndex: 'age',\r\n  },\r\n  {\r\n    title: 'Modelo',\r\n    dataIndex: 'address',\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sydney No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'Disabled User',\r\n    age: 99,\r\n    address: 'Sydney No. 1 Lake Park',\r\n  },\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: (record) => ({\r\n    disabled: record.name === 'Disabled User',\r\n    // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\nexport const TablaClientHome = () => {\r\n  const [selectionType, setSelectionType] = useState('checkbox');\r\n  return (\r\n    <div>\r\n      \r\n\r\n\r\n      <Table\r\n        rowSelection={{\r\n          type: selectionType,\r\n          ...rowSelection,\r\n        }}\r\n        columns={columns}\r\n        dataSource={data}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\servicioTelefonos\\TablasTelefono.jsx",["350","351","352","353","354","355","356"],[],"import React, { useRef, useState } from 'react';\r\nimport { Space, Table, Tag, Form, Input, Select, Button, Dropdown, Tooltip } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, ClockCircleOutlined, SyncOutlined, DownOutlined ,SearchOutlined} from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { ModalEstaudtel } from '../modal/ModalEstatud';\r\nconst onMenuClick = (e) => {\r\n  console.log('click', e);\r\n};\r\nconst items = [\r\n  {\r\n    key: '1',\r\n    label: 'Editar',\r\n    children: [\r\n     \r\n      {\r\n        label: <ModalEstaudtel />,\r\n        key: \"estatutd\",\r\n\r\n\r\n\r\n      },\r\n      {\r\n        label: 'Datos',\r\n        key: \"datos\"\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    key: '3',\r\n    label: 'Imprimir orden',\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    label: 'Eliminar',\r\n\r\n  },\r\n\r\n];\r\nconst data = [\r\n  \r\n  {\r\n    key: '1',\r\n    ordendeservicio: '01',\r\n    nombre: 'daniel ortega',\r\n    dni:'9634468',\r\n    modelo: 'Samsung a23',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de modulo\",\r\n    estadotele: <Tag icon={<ClockCircleOutlined />} color=\"warning\">Presupuestar</Tag>,\r\n    precioservite: '20.00',\r\n    tags: ['irreparable', 'entregado'],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    ordendeservicio: '02',\r\n    dni:'9634468',\r\n    nombre: 'Jim Green',\r\n    \r\n    modelo: 'Xiaomi a20',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de modulo\" ,\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    precioservite: '150.00',\r\n    tags: ['presupuestado'],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '3',\r\n    ordendeservicio: '03',\r\n    dni:'9634468',\r\n\r\n    nombre: 'Joe Black',\r\n    modelo: 'samsung a20',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de pin de carga\",\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    precioservite: '200.00',\r\n    tags: ['presupuestal',],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '4',\r\n    ordendeservicio: '04',\r\n    dni:'96374468',\r\n    nombre: 'samuel luna',\r\n    modelo: 'moto e32',\r\n    numerocliente: '541151747883',\r\n    estadotele: <Tag icon={<SyncOutlined />} color=\"processing\">Reparado</Tag>,\r\n    precioservite: '30.00',\r\n    tags: ['reparado', 'entregado'],\r\n     descriccion: \"cambio de microfono\",\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n    \r\n\r\n\r\n  },\r\n];\r\nexport const TablaTelefonos = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters,  }) => (\r\n      <div\r\n        style={{\r\n          padding: 8,\r\n        }}\r\n        onKeyDown={(e) => e.stopPropagation()}\r\n      >\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Buscar por orden de servicio`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{\r\n            marginBottom: 8,\r\n            display: 'block',\r\n          }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Buscar\r\n          </Button>\r\n          <Button\r\n            onClick={() => clearFilters && handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Limpiar\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({\r\n                closeDropdown: false,\r\n              });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n            }}\r\n          >\r\n            Restablecer\r\n          </Button>\r\n         \r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined\r\n        style={{\r\n          color: filtered ? '#1677ff' : undefined,\r\n        }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'Orden de servicio',\r\n      dataIndex: 'ordendeservicio',\r\n      ...getColumnSearchProps('ordendeservicio'),\r\n\r\n    },\r\n    {\r\n      title: 'DNI',\r\n      dataIndex: 'dni',\r\n      ...getColumnSearchProps('dni'),\r\n\r\n    },\r\n    {\r\n      title: 'Nombre del cliente',\r\n      dataIndex: 'nombre',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n  \r\n   \r\n    {\r\n      title: 'Modelo del telefono',\r\n      dataIndex: 'modelo',\r\n    },\r\n    \r\n  \r\n    \r\n  \r\n  \r\n    {\r\n      title: 'estatud',\r\n      dataIndex: 'estadotele',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: (_, { tags }) => (\r\n        <>\r\n          {tags.map((tag) => {\r\n            let color = tag.length > 10 ? 'geekblue' : 'green';\r\n            if (tag === 'irreparable') {\r\n              color = 'volcano';\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'precio',\r\n      dataIndex: 'precioservite',\r\n    },\r\n    {\r\n      title: 'opciones',\r\n      dataIndex: 'opciontele',\r\n    },\r\n  ];\r\n  \r\n  \r\n\r\n  \r\n  \r\n  \r\n  return <Table columns={columns}   \r\n  expandable={{\r\n    expandedRowRender: (record) => (\r\n      <p\r\n        style={{\r\n          margin: 2,\r\n        }}\r\n      > <div><h2>Descriccion</h2></div>\r\n        {record.descriccion}\r\n       \r\n        <div><h2>Numero de telefono</h2></div>\r\n        {record.numerocliente}\r\n      </p>\r\n      \r\n    ),\r\n    \r\n    rowExpandable: (record) => record.name !== 'Not Expandable',\r\n  }} dataSource={data} />;\r\n\r\n\r\n\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\ListaTelefono.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\servicioTelefonos\\NuevoClienteTele.jsx",["357","358","359","360"],[],"import { PlusCircleFilled,QuestionCircleOutlined,PlusOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Col, DatePicker, Drawer, Form, Input, Row, Select, Space ,FloatButton} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const NuevoClienteTele = () =>  {\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = () => { setOpen(true); };\r\n  const onClose = () => { setOpen(false);};\r\n\r\n  return (\r\n\r\n  < >\r\n    \r\n  \r\n      <FloatButton />\r\n      <FloatButton icon={<PlusCircleFilled />} onClick={showDrawer} tooltip={<div>Agregar cliente</div>} />\r\n\r\n    \r\n      <Drawer\r\n        title=\"Agregar cliente\"\r\n        width={720}\r\n        onClose={onClose}\r\n        open={open}\r\n        styles={{\r\n          body: {\r\n            paddingBottom: 80,\r\n          },\r\n        }}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={onClose}>Cancelar</Button>\r\n            <Button onClick={onClose} type=\"primary\">\r\n              Agregar\r\n            </Button>\r\n          </Space>\r\n        }\r\n      >\r\n        <Form layout=\"vertical\" hideRequiredMark>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"nombrecliente\"\r\n                label=\"Nombre completo del cliente:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el nombre del cliente',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nombre del cliente\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n             <Form.Item\r\n                name=\"Tipodeservicio\"\r\n                label=\"Tipo de servicio:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el tipo de servicio',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Tipo de servicio\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              \r\n            </Col>\r\n            <Col span={12}>\r\n              \r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"modeloteleono\"\r\n                label=\"Modelo del telefono:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el modelo del telefono:',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Modelo del telefono\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"numerocliente\"\r\n                label=\"Numero de telefono:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresar el numero de cliente',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  addonBefore=\"+54\"\r\n                 \r\n                  placeholder=\" Ingresar numero de telefono\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"preciotelefono\"\r\n                label=\"Precio del servicio:\"\r\n                rules={[\r\n                  \r\n                ]}\r\n              >\r\n                <Input\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  \r\n                 \r\n                  placeholder=\"Precio del servicio\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Descricion\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Direccion del telefono',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.TextArea rows={4} placeholder=\"por favor ingresar la descripcion\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n      \r\n\r\n  </>\r\n  \r\n)\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\ListaPc.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\servicioPc\\TablaPC.jsx",["361","362","363","364","365","366","367"],[],"import React, { useRef, useState } from 'react';\r\nimport { Space, Table, Tag, Form, Input, Select, Button, Dropdown, Tooltip } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, ClockCircleOutlined, SyncOutlined, DownOutlined ,SearchOutlined} from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { ModalEstaudtel } from '../modal/ModalEstatud';\r\nconst onMenuClick = (e) => {\r\n  console.log('click', e);\r\n};\r\nconst items = [\r\n  {\r\n    key: '1',\r\n    label: 'Editar',\r\n    children: [\r\n     \r\n      {\r\n        label: <ModalEstaudtel />,\r\n        key: \"estatutd\",\r\n\r\n\r\n\r\n      },\r\n      {\r\n        label: 'Datos',\r\n        key: \"datos\"\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    key: '3',\r\n    label: 'Imprimir orden',\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    label: 'Eliminar',\r\n\r\n  },\r\n\r\n];\r\nconst data = [\r\n  \r\n  {\r\n    key: '1',\r\n    ordendeservicio: '01',\r\n    nombre: 'daniel ortega',\r\n    dni:'9634468',\r\n    marca: 'Samsung a23',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de modulo\",\r\n    estadotele: <Tag icon={<ClockCircleOutlined />} color=\"warning\">Presupuestar</Tag>,\r\n    precioservite: '20.00',\r\n    tags: ['irreparable', 'entregado'],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    ordendeservicio: '02',\r\n    dni:'9634468',\r\n    nombre: 'Jim Green',\r\n    \r\n    marca: 'Xiaomi a20',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de modulo\" ,\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    precioservite: '150.00',\r\n    tags: ['presupuestado'],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '3',\r\n    ordendeservicio: '03',\r\n    dni:'9634468',\r\n\r\n    nombre: 'Joe Black',\r\n    marca: 'samsung a20',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de pin de carga\",\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    precioservite: '200.00',\r\n    tags: ['presupuestal',],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '4',\r\n    ordendeservicio: '04',\r\n    dni:'96374468',\r\n    nombre: 'samuel luna',\r\n    marca: 'moto e32',\r\n    numerocliente: '541151747883',\r\n    estadotele: <Tag icon={<SyncOutlined />} color=\"processing\">Reparado</Tag>,\r\n    precioservite: '30.00',\r\n    tags: ['reparado', 'entregado'],\r\n     descriccion: \"cambio de microfono\",\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n    \r\n\r\n\r\n  },\r\n];\r\nexport const TablaPC = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters,  }) => (\r\n      <div\r\n        style={{\r\n          padding: 8,\r\n        }}\r\n        onKeyDown={(e) => e.stopPropagation()}\r\n      >\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Buscar por orden de servicio`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{\r\n            marginBottom: 8,\r\n            display: 'block',\r\n          }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Buscar\r\n          </Button>\r\n          <Button\r\n            onClick={() => clearFilters && handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Limpiar\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({\r\n                closeDropdown: false,\r\n              });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n            }}\r\n          >\r\n            Restablecer\r\n          </Button>\r\n         \r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined\r\n        style={{\r\n          color: filtered ? '#1677ff' : undefined,\r\n        }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'Orden de servicio',\r\n      dataIndex: 'ordendeservicio',\r\n      ...getColumnSearchProps('ordendeservicio'),\r\n\r\n    },\r\n    {\r\n      title: 'DNI',\r\n      dataIndex: 'dni',\r\n      ...getColumnSearchProps('dni'),\r\n\r\n    },\r\n    {\r\n      title: 'Nombre del cliente',\r\n      dataIndex: 'nombre',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n  \r\n   \r\n    {\r\n      title: 'Marca ',\r\n      dataIndex: 'marca',\r\n    },\r\n    \r\n  \r\n    \r\n  \r\n  \r\n    {\r\n      title: 'estatud',\r\n      dataIndex: 'estadotele',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: (_, { tags }) => (\r\n        <>\r\n          {tags.map((tag) => {\r\n            let color = tag.length > 10 ? 'geekblue' : 'green';\r\n            if (tag === 'irreparable') {\r\n              color = 'volcano';\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'precio',\r\n      dataIndex: 'precioservite',\r\n    },\r\n    {\r\n      title: 'opciones',\r\n      dataIndex: 'opciontele',\r\n    },\r\n  ];\r\n  \r\n  \r\n\r\n  \r\n  \r\n  \r\n  return <Table columns={columns}\r\n  expandable={{\r\n    expandedRowRender: (record) => (\r\n      <p\r\n        style={{\r\n          margin: 2,\r\n        }}\r\n      > <div><h2>Descriccion</h2></div>\r\n        {record.descriccion}\r\n       \r\n        <div><h2>Numero de telefono</h2></div>\r\n        {record.numerocliente}\r\n      </p>\r\n      \r\n    ),\r\n    \r\n    rowExpandable: (record) => record.name !== 'Not Expandable',\r\n  }} dataSource={data} />;\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\modal\\ModalEstatud.jsx",["368","369","370","371"],[],"import React, { useState } from 'react';\r\nimport { Button, Modal , Checkbox,Row,Col,Tag } from 'antd';\r\n\r\n\r\nexport const ModalEstaudtel = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const onChange = (checkedValues) => {\r\n    console.log('checked = ', checkedValues);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCancelar = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n<a href=\"\" onClick={showModal}></a>\r\n      <a type=\"primary\" onClick={showModal}>\r\n        Estatud\r\n      </a>\r\n\r\n    \r\n      <Modal  open={isModalOpen} onOk={handleOk} onCancel={handleCancelar} cancelText=\"Cancelar\" okText=\"Guardar\">\r\n      <Checkbox.Group\r\n    style={{\r\n      width: '100%',\r\n    }}\r\n    onChange={onChange}\r\n  >\r\n    <Row span={8}>\r\n      <Col span={8}>\r\n        <Checkbox color=\"blue\"value=\"Presupuestar\"> <Tag color=\"processing\">Presupuestar</Tag></Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"Presupuestado\"><Tag color=\"purple\">Presupuestado</Tag> </Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"Reparado\"><Tag color=\"success\">Reparado</Tag></Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"Inrreparable\"><Tag color=\"error\">Inrreparable</Tag></Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"Entregado\"><Tag color=\"lime\">Entregado</Tag></Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"Garantia\"><Tag color=\"warning\">Garantia</Tag></Checkbox>\r\n      </Col>\r\n    </Row>\r\n  </Checkbox.Group>\r\n  \r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\servicioPc\\NuevoClientePc.jsx",["372","373","374","375"],[],"import { PlusCircleFilled,QuestionCircleOutlined,PlusOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Col, DatePicker, Drawer, Form, Input, Row, Select, Space ,FloatButton} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const NuevoClientePc = () =>  {\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = () => { setOpen(true); };\r\n  const onClose = () => { setOpen(false);};\r\n\r\n  return (\r\n\r\n  < >\r\n    \r\n  \r\n      <FloatButton />\r\n      <FloatButton icon={<PlusCircleFilled />} onClick={showDrawer} tooltip={<div>Agregar cliente</div>} />\r\n\r\n    \r\n      <Drawer\r\n        title=\"Agregar cliente\"\r\n        width={720}\r\n        onClose={onClose}\r\n        open={open}\r\n        styles={{\r\n          body: {\r\n            paddingBottom: 80,\r\n          },\r\n        }}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={onClose}>Cancelar</Button>\r\n            <Button onClick={onClose} type=\"primary\">\r\n              Agregar\r\n            </Button>\r\n          </Space>\r\n        }\r\n      >\r\n        <Form layout=\"vertical\" hideRequiredMark>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"nombrecliente\"\r\n                label=\"Nombre completo del cliente:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el nombre del cliente',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nombre del cliente\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n             <Form.Item\r\n                name=\"Tipodeservicio\"\r\n                label=\"Tipo de servicio:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el tipo de servicio',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Tipo de servicio\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              \r\n            </Col>\r\n            <Col span={12}>\r\n              \r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"marcapc\"\r\n                label=\"Marca de la pc\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese la marca de la pc',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Marca de la pc\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"numerocliente\"\r\n                label=\"Numero de telefono:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresar el numero de cliente',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  addonBefore=\"+54\"\r\n                 \r\n                  placeholder=\" Ingresar numero de telefono\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"preciotelefono\"\r\n                label=\"Precio del servicio:\"\r\n                rules={[\r\n                  \r\n                ]}\r\n              >\r\n                <Input\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  \r\n                 \r\n                  placeholder=\"Precio del servicio\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Descricion\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Direccion del telefono',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.TextArea rows={4} placeholder=\"por favor ingresar la descripcion\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n      \r\n\r\n  </>\r\n  \r\n)\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\ListaOtros.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\otrosServicios\\TablasOtros.jsx",["376","377","378","379","380","381","382"],[],"import React, { useRef, useState } from 'react';\r\nimport { Space, Table, Tag, Form, Input, Select, Button, Dropdown, Tooltip } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, ClockCircleOutlined, SyncOutlined, DownOutlined ,SearchOutlined} from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { ModalEstaudtel } from '../modal/ModalEstatud';\r\nconst onMenuClick = (e) => {\r\n  console.log('click', e);\r\n};\r\nconst items = [\r\n  {\r\n    key: '1',\r\n    label: 'Editar',\r\n    children: [\r\n     \r\n      {\r\n        label: <ModalEstaudtel />,\r\n        key: \"estatutd\",\r\n\r\n\r\n\r\n      },\r\n      {\r\n        label: 'Datos',\r\n        key: \"datos\"\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    key: '3',\r\n    label: 'Imprimir orden',\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    label: 'Eliminar',\r\n\r\n  },\r\n\r\n];\r\nconst data = [\r\n  \r\n  {\r\n    key: '1',\r\n    ordendeservicio: '01',\r\n    nombre: 'daniel ortega',\r\n    dni:'9634468',\r\n    dispositivo: 'TV',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de modulo\",\r\n    estadotele: <Tag icon={<ClockCircleOutlined />} color=\"warning\">Presupuestar</Tag>,\r\n    precioservite: '20.00',\r\n    tags: ['irreparable', 'entregado'],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    ordendeservicio: '02',\r\n    dni:'9634468',\r\n    nombre: 'Jim Green',\r\n    dispositivo: 'micro ondas',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de modulo\" ,\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    precioservite: '150.00',\r\n    tags: ['presupuestado'],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '3',\r\n    ordendeservicio: '03',\r\n    dni:'9634468',\r\n\r\n    nombre: 'Joe Black',\r\n    dispositivo: 'lavadora',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de pin de carga\",\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    precioservite: '200.00',\r\n    tags: ['presupuestal',],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '4',\r\n    ordendeservicio: '04',\r\n    dni:'96374468',\r\n    nombre: 'samuel luna',\r\n    dispositivo: 'consola',\r\n    numerocliente: '541151747883',\r\n    estadotele: <Tag icon={<SyncOutlined />} color=\"processing\">Reparado</Tag>,\r\n    precioservite: '30.00',\r\n    tags: ['reparado', 'entregado'],\r\n     descriccion: \"cambio de microfono\",\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n    \r\n\r\n\r\n  },\r\n];\r\nexport const TablaOtros= () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters,  }) => (\r\n      <div\r\n        style={{\r\n          padding: 8,\r\n        }}\r\n        onKeyDown={(e) => e.stopPropagation()}\r\n      >\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Buscar por orden de servicio`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{\r\n            marginBottom: 8,\r\n            display: 'block',\r\n          }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Buscar\r\n          </Button>\r\n          <Button\r\n            onClick={() => clearFilters && handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Limpiar\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({\r\n                closeDropdown: false,\r\n              });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n            }}\r\n          >\r\n            Restablecer\r\n          </Button>\r\n         \r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined\r\n        style={{\r\n          color: filtered ? '#1677ff' : undefined,\r\n        }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'Orden de servicio',\r\n      dataIndex: 'ordendeservicio',\r\n      ...getColumnSearchProps('ordendeservicio'),\r\n\r\n    },\r\n    {\r\n      title: 'DNI',\r\n      dataIndex: 'dni',\r\n      ...getColumnSearchProps('dni'),\r\n\r\n    },\r\n    {\r\n      title: 'Nombre del cliente',\r\n      dataIndex: 'nombre',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n  \r\n   \r\n    {\r\n      title: 'Tipo de dispositivo ',\r\n      dataIndex: 'dispositivo',\r\n    },\r\n    \r\n  \r\n    \r\n  \r\n  \r\n    {\r\n      title: 'Estatud',\r\n      dataIndex: 'estado',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: (_, { tags }) => (\r\n        <>\r\n          {tags.map((tag) => {\r\n            let color = tag.length > 10 ? 'geekblue' : 'green';\r\n            if (tag === 'irreparable') {\r\n              color = 'volcano';\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'precio',\r\n      dataIndex: 'precioservite',\r\n    },\r\n    {\r\n      title: 'opciones',\r\n      dataIndex: 'opciontele',\r\n    },\r\n  ];\r\n  \r\n  \r\n\r\n  \r\n  \r\n  \r\n  return <Table columns={columns}\r\n  expandable={{\r\n    expandedRowRender: (record) => (\r\n      <p\r\n        style={{\r\n          margin: 2,\r\n        }}\r\n      > <div><h2>Descriccion</h2></div>\r\n        {record.descriccion}\r\n       \r\n        <div><h2>Numero de telefono</h2></div>\r\n        {record.numerocliente}\r\n      </p>\r\n      \r\n    ),\r\n    \r\n    rowExpandable: (record) => record.name !== 'Not Expandable',\r\n  }} dataSource={data} />;\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\otrosServicios\\NuevoClienteOtros.jsx",["383","384","385","386"],[],"import { PlusCircleFilled,QuestionCircleOutlined,PlusOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Col, DatePicker, Drawer, Form, Input, Row, Select, Space ,FloatButton} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const NuevoClienteOtros = () =>  {\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = () => { setOpen(true); };\r\n  const onClose = () => { setOpen(false);};\r\n\r\n  return (\r\n\r\n  < >\r\n    \r\n  \r\n      <FloatButton />\r\n      <FloatButton icon={<PlusCircleFilled />} onClick={showDrawer} tooltip={<div>Agregar cliente</div>} />\r\n\r\n    \r\n      <Drawer\r\n        title=\"Agregar cliente\"\r\n        width={720}\r\n        onClose={onClose}\r\n        open={open}\r\n        styles={{\r\n          body: {\r\n            paddingBottom: 80,\r\n          },\r\n        }}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={onClose}>Cancelar</Button>\r\n            <Button onClick={onClose} type=\"primary\">\r\n              Agregar\r\n            </Button>\r\n          </Space>\r\n        }\r\n      >\r\n        <Form layout=\"vertical\" hideRequiredMark>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"nombrecliente\"\r\n                label=\"Nombre completo del cliente:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el nombre del cliente',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nombre del cliente\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n             <Form.Item\r\n                name=\"Tipodeservicio\"\r\n                label=\"Tipo de servicio:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el tipo de servicio',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Tipo de servicio\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              \r\n            </Col>\r\n            <Col span={12}>\r\n              \r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"dispositivo\"\r\n                label=\"Tipo de dispositivo\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese el Tipo de dispositivo',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Tipo de dispositivo\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"numerocliente\"\r\n                label=\"Numero de telefono:\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresar el numero de cliente',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  addonBefore=\"+54\"\r\n                 \r\n                  placeholder=\" Ingresar numero de telefono\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"preciotelefono\"\r\n                label=\"Precio del servicio:\"\r\n                rules={[\r\n                  \r\n                ]}\r\n              >\r\n                <Input\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  \r\n                 \r\n                  placeholder=\"Precio del servicio\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Descricion\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Direccion del telefono',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.TextArea rows={4} placeholder=\"por favor ingresar la descripcion\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n      \r\n\r\n  </>\r\n  \r\n)\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Reporte.jsx",["387","388","389","390","391","392","393","394"],[],"import React from 'react'\r\nimport { LayoutPrincipal } from '../layouts/LayoutPrincipal'\r\nimport '../App.css';\r\nimport { Charpclien } from '../components/home/charp-clien';\r\nimport { Charp } from '../components/home/charp';\r\nimport { TablaReport } from '../components/Report/TablaReport';\r\nimport { PrinterOutlined } from '@ant-design/icons';\r\nimport { EstadisticaRerpo } from '../components/Report/EstaditicaReport';\r\nimport { Timeli } from '../components/home/time-line';\r\n\r\nimport { Button ,Space, Row, Col} from \"antd\";\r\n\r\n\r\n\r\nexport const Reportes = () => {\r\n  return (\r\n<div>\r\n    \r\n    <LayoutPrincipal >\r\n        \r\n    \r\n\r\n    <br />\r\n\r\n\r\n    \r\n   <EstadisticaRerpo></EstadisticaRerpo>\r\n   <Timeli></Timeli>\r\n\r\n    </LayoutPrincipal>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Report\\TablaReport.jsx",["395","396","397","398"],[],"import React, { useRef, useState } from 'react';\r\nimport { Space, Table, Tag, Form, Input, Select, Button, Dropdown, Tooltip } from 'antd';\r\nimport { CheckCircleOutlined,  ClockCircleOutlined, SyncOutlined, PrinterOutlined ,SearchOutlined} from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nconst onMenuClick = (e) => {\r\n  console.log('click', e);\r\n};\r\nconst items = [\r\n  \r\n  {\r\n    key: '3',\r\n    label: 'Imprimir orden',\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    label: 'Eliminar',\r\n\r\n  },\r\n\r\n];\r\nconst data = [\r\n  \r\n  {\r\n    key: '1',\r\n    ordendeservicio: '01',\r\n    nombre: 'daniel ortega',\r\n    dni:'9634468',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de modulo\",\r\n    estadotele: <Tag icon={<ClockCircleOutlined />} color=\"warning\">Presupuestar</Tag>,\r\n    precioservite: '20.00',\r\n    tags: ['irreparable', 'entregado'],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    ordendeservicio: '02',\r\n    dni:'9634468',\r\n    nombre: 'Jim Green',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de modulo\" ,\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    precioservite: '150.00',\r\n    tags: ['presupuestado'],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '3',\r\n    ordendeservicio: '03',\r\n    dni:'9634468',\r\n\r\n    nombre: 'Joe Black',\r\n    numerocliente: '541151747883',\r\n    descriccion: \"cambio de pin de carga\",\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    precioservite: '200.00',\r\n    tags: ['presupuestal',],\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '4',\r\n    ordendeservicio: '04',\r\n    dni:'96374468',\r\n    nombre: 'samuel luna',\r\n    numerocliente: '541151747883',\r\n    estadotele: <Tag icon={<SyncOutlined />} color=\"processing\">Reparado</Tag>,\r\n    precioservite: '30.00',\r\n    tags: ['reparado', 'entregado'],\r\n     descriccion: \"cambio de microfono\",\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n    \r\n\r\n\r\n  },\r\n];\r\nexport const TablaReport= () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters,  }) => (\r\n      <div\r\n        style={{\r\n          padding: 8,\r\n        }}\r\n        onKeyDown={(e) => e.stopPropagation()}\r\n      >\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Buscar por orden de servicio`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{\r\n            marginBottom: 8,\r\n            display: 'block',\r\n          }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Buscar\r\n          </Button>\r\n          <Button\r\n            onClick={() => clearFilters && handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Limpiar\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({\r\n                closeDropdown: false,\r\n              });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n            }}\r\n          >\r\n            Restablecer\r\n          </Button>\r\n         \r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined\r\n        style={{\r\n          color: filtered ? '#1677ff' : undefined,\r\n        }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'Codigo',\r\n      dataIndex: 'ordendeservicio',\r\n      ...getColumnSearchProps('ordendeservicio'),\r\n\r\n    },\r\n    {\r\n      title: 'DNI',\r\n      dataIndex: 'dni',\r\n      ...getColumnSearchProps('dni'),\r\n\r\n    },\r\n  \r\n  \r\n   \r\n   \r\n    \r\n  \r\n    \r\n  \r\n  \r\n    {\r\n      title: 'Estatud',\r\n      dataIndex: 'estado',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: (_, { tags }) => (\r\n        <>\r\n          {tags.map((tag) => {\r\n            let color = tag.length > 10 ? 'geekblue' : 'green';\r\n            if (tag === 'irreparable') {\r\n              color = 'volcano';\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Precio',\r\n      dataIndex: 'precioservite',\r\n    },\r\n    {\r\n      title: 'Opciones',\r\n      dataIndex: 'opciontele',\r\n    },\r\n  ];\r\n  \r\n  \r\n\r\n  \r\n  \r\n  \r\n  return <div>\r\n  \r\n  <Button type=\"primary\"><PrinterOutlined />Imprimir Reporte</Button><br />\r\n  <Table columns={columns}\r\n  expandable={{\r\n    expandedRowRender: (record) => (\r\n      <p\r\n        style={{\r\n          margin: 2,\r\n        }}\r\n      > <div><h2>Descriccion</h2></div>\r\n        {record.descriccion}\r\n       \r\n        <div><h2>Numero de telefono</h2></div>\r\n        {record.numerocliente}\r\n      </p>\r\n      \r\n    ),\r\n    \r\n    rowExpandable: (record) => record.name !== 'Not Expandable',\r\n  }} dataSource={data} />;\r\n\r\n</div>\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Report\\EstaditicaReport.jsx",["399"],[],"import React from 'react';\r\nimport { Flex, Progress, Card, Space, Typography, Tooltip, Col, Row, Statistic } from 'antd';\r\nimport { ArrowDownOutlined, ArrowUpOutlined } from '@ant-design/icons';\r\nimport { TablaReport } from './TablaReport';\r\n\r\nexport const EstadisticaRerpo = () => (\r\n    <Flex style={{ marginTop: 12, marginLeft: 1 }} gap=\"middle\" vertical>\r\n\r\n\r\n        <Space size={20}>\r\n            <Card className='flex px-1  w-full max-w-100'  >\r\n                <TablaReport></TablaReport>\r\n            </Card>\r\n            <Flex vertical gap=\"middle\">\r\n                <Flex gap=\"small\" wrap>\r\n\r\n                    <Card className=''\r\n\r\n                    >\r\n                        <Tooltip title=\"Otros equpipos\">\r\n                            <Progress className='px-2 ' strokeColor=\"#0E46A3\" size={[80, 20]} strokeWidth={12} type=\"dashboard\" percent={10} status=\"active\" />\r\n\r\n                        </Tooltip>\r\n                    </Card>\r\n                    <Card className=''\r\n\r\n                    >\r\n                        <Tooltip title=\"Pc\">\r\n                            <Progress className='px-2 ' strokeColor=\"#F97300\" size={[80, 20]} strokeWidth={12} type=\"dashboard\" percent={30} status=\"active\" />\r\n\r\n                        </Tooltip>\r\n                    </Card>\r\n                    <Card className=''\r\n\r\n                    >\r\n                        <Tooltip title=\"telefonos\">\r\n                            <Progress className='px-2 ' strokeColor=\"#151515\" size={[80, 20]} strokeWidth={12} type=\"dashboard\" percent={90} status=\"active\" />\r\n\r\n                        </Tooltip>\r\n                    </Card>\r\n                    <Card className=''\r\n\r\n                    >\r\n                        <Tooltip title=\"Garantias\">\r\n                            <Progress className='px-2 ' strokeColor=\"#B80000\" size={[80, 20]} strokeWidth={12} type=\"dashboard\" percent={60} status=\"active\" />\r\n\r\n                        </Tooltip>\r\n                    </Card>\r\n                    <Card className=''\r\n\r\n                    ><Tooltip title=\"Equipos por presupuesto\" >\r\n                            <Progress className='px-2  ' strokeColor=\"#87A922\" size={[80, 20]} strokeWidth={12} type=\"dashboard\" percent={20} status=\"active\" />\r\n                        </Tooltip>\r\n                    </Card><Card className=''\r\n\r\n                    >\r\n                        <Tooltip title=\"Servcios nuevos\">\r\n\r\n                            <Progress className='px-2 ' strokeColor=\"#40A2E3\" size={[80, 20]} strokeWidth={12} type=\"dashboard\" percent={50} status=\"active\" />\r\n                        </Tooltip>\r\n                    </Card>\r\n\r\n                </Flex>\r\n            </Flex>\r\n        </Space>\r\n        <Row gutter={16}>\r\n            <Col span={12}>\r\n                <Card size={[80, 20]} bordered={false} className='flex px-2  w-full max-w-100'>\r\n                    <Statistic\r\n                        title=\"Equipos reparados\"\r\n                        value={11.28}\r\n                        precision={2}\r\n                        valueStyle={{ color: '#3f8600' }}\r\n                        prefix={<ArrowUpOutlined />}\r\n                        suffix=\"%\"\r\n                    />\r\n                </Card>\r\n            </Col>\r\n            <Col span={12}>\r\n                <Card bordered={false}>\r\n                    <Statistic\r\n                        title=\"Garantias\"\r\n                        value={9.3}\r\n                        precision={2}\r\n                        valueStyle={{ color: '#cf1322' }}\r\n                        prefix={<ArrowDownOutlined />}\r\n                        suffix=\"%\"\r\n                    />\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <br />\r\n\r\n    </Flex>\r\n\r\n\r\n\r\n)","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\UsuariosTabla.jsx",["400","401","402","403"],[],"import React, { useRef, useState } from 'react';\r\nimport { Space, Table, Tag, Form, Input, Select, Button, Dropdown, Tooltip } from 'antd';\r\nimport { CheckCircleOutlined,  ClockCircleOutlined, SyncOutlined, PrinterOutlined ,SearchOutlined} from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nconst onMenuClick = (e) => {\r\n  console.log('click', e);\r\n};\r\nconst items = [\r\n  \r\n  {\r\n    key: '3',\r\n    label: 'Editar',\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    label: 'Eliminar',\r\n\r\n  },\r\n\r\n];\r\nconst data = [\r\n  \r\n  {\r\n    key: '1',\r\n    ordendeservicio: '01',\r\n    nombre: 'daniel ortega',\r\n    dni:'9634468',\r\n    usuario: 'danel8y88',\r\n    estadotele: <Tag icon={<ClockCircleOutlined />} color=\"warning\">Presupuestar</Tag>,\r\n    cargo: 'tecnico jefe',\r\n    rol:'usuario',\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>\r\n\r\n  },\r\n  {\r\n    key: '2',\r\n    ordendeservicio: '02',\r\n    dni:'9634468',\r\n    nombre: 'Jim Green',\r\n    usuario: 'jinw3e',\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    cargo:'tecnico jefe',\r\n    rol:'admin',\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '3',\r\n    ordendeservicio: '03',\r\n    dni:'9634468',\r\n    nombre: 'Joe Black',\r\n    usuario: 'joe878',\r\n    descriccion: \"cambio de pin de carga\",\r\n    estadotele: <Tag icon={<CheckCircleOutlined />} color=\"success\">Entregado</Tag>,\r\n    cargo :'tecnico jefe',\r\n    rol:'admin',\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n\r\n\r\n  },\r\n  {\r\n    key: '4',\r\n    ordendeservicio: '04',\r\n    dni:'96374468',\r\n    nombre: 'samuel luna',\r\n    usuario: 'ssamu98',\r\n    estadotele: <Tag icon={<SyncOutlined />} color=\"processing\">Reparado</Tag>,\r\n    cargo: 'tecnico jefe',\r\n    rol:'usuario',\r\n     descriccion: \"cambio de microfono\",\r\n    opciontele: <Dropdown.Button\r\n      menu={{\r\n        items,\r\n        onClick: onMenuClick,\r\n      }}\r\n    >\r\n      opciones\r\n    </Dropdown.Button>,\r\n    \r\n\r\n\r\n  },\r\n];\r\nexport const TablaUsuarios= () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters,  }) => (\r\n      <div\r\n        style={{\r\n          padding: 8,\r\n        }}\r\n        onKeyDown={(e) => e.stopPropagation()}\r\n      >\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Buscar por orden de servicio`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{\r\n            marginBottom: 8,\r\n            display: 'block',\r\n          }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Buscar\r\n          </Button>\r\n          <Button\r\n            onClick={() => clearFilters && handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Limpiar\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({\r\n                closeDropdown: false,\r\n              });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n            }}\r\n          >\r\n            Restablecer\r\n          </Button>\r\n         \r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined\r\n        style={{\r\n          color: filtered ? '#1677ff' : undefined,\r\n        }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'Nombre y Apellido',\r\n      dataIndex: 'nombre',\r\n      ...getColumnSearchProps('ordendeservicio'),\r\n\r\n    },\r\n    {\r\n        title: 'DNI',\r\n        dataIndex: 'dni',\r\n        ...getColumnSearchProps('dni'),\r\n  \r\n      },\r\n    {\r\n        title: 'Usuario',\r\n        dataIndex: 'usuario',\r\n      },\r\n    \r\n\r\n  \r\n  \r\n    {\r\n      title: 'Rol',\r\n      dataIndex: 'rol',\r\n      \r\n    },\r\n    {\r\n      title: 'Cargo',\r\n      dataIndex: 'cargo',\r\n    },\r\n    \r\n    \r\n    {\r\n      title: 'Opciones',\r\n      dataIndex: 'opciontele',\r\n    },\r\n  ];\r\n  \r\n  \r\n\r\n  \r\n  \r\n  \r\n  return <div>\r\n  \r\n  <Table columns={columns}\r\n dataSource={data} />;\r\n\r\n</div>\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\AgregarUsuario.jsx",["404","405","406"],[],"import { PlusCircleFilled,QuestionCircleOutlined,PlusOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Col, DatePicker, Drawer, Form, Input, Row, Select, Space ,FloatButton} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const AgregarUsuario = () =>  {\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = () => { setOpen(true); };\r\n  const onClose = () => { setOpen(false);};\r\n\r\n  return (\r\n\r\n  < >\r\n    \r\n  \r\n      <FloatButton />\r\n      <FloatButton icon={<PlusCircleFilled />} onClick={showDrawer} tooltip={<div>Agregar Usuario</div>} />\r\n\r\n    \r\n      <Drawer\r\n        title=\"Agregar Usuario\"\r\n        width={720}\r\n        onClose={onClose}\r\n        open={open}\r\n        styles={{\r\n          body: {\r\n            paddingBottom: 80,\r\n          },\r\n        }}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={onClose}>Cancelar</Button>\r\n            <Button onClick={onClose} type=\"primary\">\r\n              Agregar\r\n            </Button>\r\n          </Space>\r\n        }\r\n      >\r\n        <Form layout=\"vertical\" hideRequiredMark>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"name\"\r\n                label=\"Nombre y Apellido\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingrese Nombre y Apellido',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nombre y Apellido\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"usuario\"\r\n                label=\"Usuario\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresar Usuario',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Usuario\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"clave\"\r\n                label=\"Clave\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresar la Clave',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Clave\" />\r\n              </Form.Item>\r\n            </Col>\r\n           \r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"dni\"\r\n                label=\"DNI\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresar el DNI',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"DNI\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"rol\"\r\n                label=\"Rol del Usuario\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor Seleccione el Rol ',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select placeholder=\"Seleccione el Rol\">\r\n                  <Option value=\"admin\">Admin</Option>\r\n                  <Option value=\"limitado\">limitado</Option>\r\n                  <Option value=\"invitado\">Invitado</Option>\r\n\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"cargo\"\r\n                label=\"Cargo del Usuario\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Cargo del Usuario',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select placeholder=\"Seleccione el Cargo del Usuario\">\r\n                  <Option value=\"tecnico\">tecnico</Option>\r\n                  <Option value=\"venderdor\">venderdor</Option>\r\n                  <Option value=\"Sisteama\">Sistema</Option>\r\n               \r\n                 \r\n\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Form.Item\r\n                name=\"numero\"\r\n                label=\"Numero de telefono\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresar numero de telefono ',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  addonBefore=\"+54\"\r\n                 \r\n                  placeholder=\" Ingresar numero de telefono\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row gutter={16}>\r\n           \r\n\r\n          </Row>\r\n         \r\n        </Form>\r\n      </Drawer>\r\n\r\n      \r\n\r\n  </>\r\n  \r\n)\r\n}\r\n","C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\ListaUsuario.jsx",["407","408","409"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\OpcionesEditar.jsx",["410","411","412"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\DatosEmpresa.jsx",["413"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Maps.jsx",["414","415","416"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Empresa.jsx",["417"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\paginas\\Usuarios.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Empresa\\LogoEmpresa.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Empresa\\BotonConfigEmpres.jsx",["418","419"],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Empresa\\EditarLogo.jsx",[],[],"C:\\Users\\david\\Documents\\GitHub\\geek-smart\\src\\components\\Config\\Empresa\\EditarDatosEmpresa.jsx",["420","421","422","423","424","425","426","427","428"],[],{"ruleId":"429","severity":1,"message":"430","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":16},{"ruleId":"433","severity":1,"message":"434","line":108,"column":11,"nodeType":"435","endLine":108,"endColumn":104},{"ruleId":"429","severity":1,"message":"436","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":17},{"ruleId":"429","severity":1,"message":"437","line":9,"column":64,"nodeType":"431","messageId":"432","endLine":9,"endColumn":76},{"ruleId":"429","severity":1,"message":"438","line":10,"column":36,"nodeType":"431","messageId":"432","endLine":10,"endColumn":41},{"ruleId":"429","severity":1,"message":"439","line":38,"column":12,"nodeType":"431","messageId":"432","endLine":38,"endColumn":24},{"ruleId":"429","severity":1,"message":"440","line":43,"column":12,"nodeType":"431","messageId":"432","endLine":43,"endColumn":21},{"ruleId":"429","severity":1,"message":"441","line":48,"column":12,"nodeType":"431","messageId":"432","endLine":48,"endColumn":26},{"ruleId":"442","severity":1,"message":"443","line":88,"column":21,"nodeType":"435","endLine":88,"endColumn":78},{"ruleId":"433","severity":1,"message":"434","line":91,"column":34,"nodeType":"435","endLine":91,"endColumn":115},{"ruleId":"442","severity":1,"message":"444","line":8,"column":23,"nodeType":"435","endLine":8,"endColumn":26},{"ruleId":"429","severity":1,"message":"445","line":2,"column":38,"nodeType":"431","messageId":"432","endLine":2,"endColumn":48},{"ruleId":"429","severity":1,"message":"430","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":16},{"ruleId":"433","severity":1,"message":"434","line":109,"column":11,"nodeType":"435","endLine":109,"endColumn":104},{"ruleId":"429","severity":1,"message":"446","line":7,"column":10,"nodeType":"431","messageId":"432","endLine":7,"endColumn":20},{"ruleId":"429","severity":1,"message":"437","line":12,"column":67,"nodeType":"431","messageId":"432","endLine":12,"endColumn":79},{"ruleId":"429","severity":1,"message":"438","line":13,"column":36,"nodeType":"431","messageId":"432","endLine":13,"endColumn":41},{"ruleId":"429","severity":1,"message":"447","line":36,"column":10,"nodeType":"431","messageId":"432","endLine":36,"endColumn":16},{"ruleId":"429","severity":1,"message":"448","line":38,"column":9,"nodeType":"431","messageId":"432","endLine":38,"endColumn":17},{"ruleId":"429","severity":1,"message":"439","line":48,"column":12,"nodeType":"431","messageId":"432","endLine":48,"endColumn":24},{"ruleId":"429","severity":1,"message":"440","line":53,"column":12,"nodeType":"431","messageId":"432","endLine":53,"endColumn":21},{"ruleId":"429","severity":1,"message":"441","line":58,"column":12,"nodeType":"431","messageId":"432","endLine":58,"endColumn":26},{"ruleId":"429","severity":1,"message":"449","line":76,"column":12,"nodeType":"431","messageId":"432","endLine":76,"endColumn":25},{"ruleId":"429","severity":1,"message":"450","line":89,"column":9,"nodeType":"431","messageId":"432","endLine":89,"endColumn":14},{"ruleId":"429","severity":1,"message":"451","line":109,"column":9,"nodeType":"431","messageId":"432","endLine":109,"endColumn":16},{"ruleId":"442","severity":1,"message":"443","line":122,"column":13,"nodeType":"435","endLine":122,"endColumn":70},{"ruleId":"433","severity":1,"message":"434","line":125,"column":19,"nodeType":"435","endLine":125,"endColumn":100},{"ruleId":"442","severity":1,"message":"443","line":206,"column":17,"nodeType":"435","endLine":206,"endColumn":272},{"ruleId":"429","severity":1,"message":"452","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":17},{"ruleId":"429","severity":1,"message":"453","line":3,"column":19,"nodeType":"431","messageId":"432","endLine":3,"endColumn":24},{"ruleId":"442","severity":1,"message":"444","line":8,"column":23,"nodeType":"435","endLine":8,"endColumn":26},{"ruleId":"429","severity":1,"message":"454","line":58,"column":25,"nodeType":"431","messageId":"432","endLine":58,"endColumn":41},{"ruleId":"429","severity":1,"message":"452","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":17},{"ruleId":"429","severity":1,"message":"453","line":3,"column":19,"nodeType":"431","messageId":"432","endLine":3,"endColumn":24},{"ruleId":"429","severity":1,"message":"455","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":17},{"ruleId":"442","severity":1,"message":"444","line":10,"column":23,"nodeType":"435","endLine":10,"endColumn":26},{"ruleId":"429","severity":1,"message":"454","line":79,"column":25,"nodeType":"431","messageId":"432","endLine":79,"endColumn":41},{"ruleId":"429","severity":1,"message":"456","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":49},{"ruleId":"429","severity":1,"message":"457","line":1,"column":50,"nodeType":"431","messageId":"432","endLine":1,"endColumn":62},{"ruleId":"429","severity":1,"message":"458","line":4,"column":23,"nodeType":"431","messageId":"432","endLine":4,"endColumn":33},{"ruleId":null,"fatal":true,"severity":2,"message":"459","line":200,"column":7},{"ruleId":"429","severity":1,"message":"460","line":6,"column":54,"nodeType":"431","messageId":"432","endLine":6,"endColumn":65},{"ruleId":"429","severity":1,"message":"437","line":6,"column":67,"nodeType":"431","messageId":"432","endLine":6,"endColumn":79},{"ruleId":"429","severity":1,"message":"438","line":7,"column":36,"nodeType":"431","messageId":"432","endLine":7,"endColumn":41},{"ruleId":"429","severity":1,"message":"461","line":7,"column":43,"nodeType":"431","messageId":"432","endLine":7,"endColumn":46},{"ruleId":"429","severity":1,"message":"462","line":7,"column":48,"nodeType":"431","messageId":"432","endLine":7,"endColumn":51},{"ruleId":"429","severity":1,"message":"463","line":10,"column":10,"nodeType":"431","messageId":"432","endLine":10,"endColumn":17},{"ruleId":"429","severity":1,"message":"464","line":27,"column":12,"nodeType":"431","messageId":"432","endLine":27,"endColumn":24},{"ruleId":"442","severity":1,"message":"443","line":48,"column":13,"nodeType":"435","endLine":48,"endColumn":70},{"ruleId":"433","severity":1,"message":"434","line":51,"column":19,"nodeType":"435","endLine":51,"endColumn":100},{"ruleId":"429","severity":1,"message":"452","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":17},{"ruleId":"429","severity":1,"message":"453","line":4,"column":19,"nodeType":"431","messageId":"432","endLine":4,"endColumn":24},{"ruleId":"442","severity":1,"message":"444","line":10,"column":23,"nodeType":"435","endLine":10,"endColumn":26},{"ruleId":"429","severity":1,"message":"454","line":82,"column":25,"nodeType":"431","messageId":"432","endLine":82,"endColumn":41},{"ruleId":"429","severity":1,"message":"445","line":2,"column":38,"nodeType":"431","messageId":"432","endLine":2,"endColumn":48},{"ruleId":"429","severity":1,"message":"452","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":17},{"ruleId":"429","severity":1,"message":"453","line":3,"column":19,"nodeType":"431","messageId":"432","endLine":3,"endColumn":24},{"ruleId":"442","severity":1,"message":"444","line":8,"column":23,"nodeType":"435","endLine":8,"endColumn":26},{"ruleId":"429","severity":1,"message":"454","line":58,"column":25,"nodeType":"431","messageId":"432","endLine":58,"endColumn":41},{"ruleId":"429","severity":1,"message":"465","line":2,"column":29,"nodeType":"431","messageId":"432","endLine":2,"endColumn":33},{"ruleId":"429","severity":1,"message":"466","line":2,"column":42,"nodeType":"431","messageId":"432","endLine":2,"endColumn":48},{"ruleId":"429","severity":1,"message":"467","line":2,"column":68,"nodeType":"431","messageId":"432","endLine":2,"endColumn":75},{"ruleId":"429","severity":1,"message":"468","line":3,"column":31,"nodeType":"431","messageId":"432","endLine":3,"endColumn":50},{"ruleId":"429","severity":1,"message":"469","line":3,"column":87,"nodeType":"431","messageId":"432","endLine":3,"endColumn":99},{"ruleId":"442","severity":1,"message":"444","line":249,"column":25,"nodeType":"435","endLine":249,"endColumn":28},{"ruleId":"470","severity":1,"message":"471","line":266,"column":7,"nodeType":"472","messageId":"473","endLine":266,"endColumn":16},{"ruleId":"429","severity":1,"message":"456","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":49},{"ruleId":"429","severity":1,"message":"457","line":1,"column":50,"nodeType":"431","messageId":"432","endLine":1,"endColumn":62},{"ruleId":"429","severity":1,"message":"458","line":4,"column":23,"nodeType":"431","messageId":"432","endLine":4,"endColumn":33},{"ruleId":"429","severity":1,"message":"474","line":6,"column":9,"nodeType":"431","messageId":"432","endLine":6,"endColumn":15},{"ruleId":"429","severity":1,"message":"465","line":2,"column":29,"nodeType":"431","messageId":"432","endLine":2,"endColumn":33},{"ruleId":"429","severity":1,"message":"466","line":2,"column":42,"nodeType":"431","messageId":"432","endLine":2,"endColumn":48},{"ruleId":"429","severity":1,"message":"467","line":2,"column":68,"nodeType":"431","messageId":"432","endLine":2,"endColumn":75},{"ruleId":"429","severity":1,"message":"468","line":3,"column":31,"nodeType":"431","messageId":"432","endLine":3,"endColumn":50},{"ruleId":"429","severity":1,"message":"469","line":3,"column":87,"nodeType":"431","messageId":"432","endLine":3,"endColumn":99},{"ruleId":"442","severity":1,"message":"444","line":249,"column":25,"nodeType":"435","endLine":249,"endColumn":28},{"ruleId":"470","severity":1,"message":"471","line":266,"column":7,"nodeType":"472","messageId":"473","endLine":266,"endColumn":16},{"ruleId":"429","severity":1,"message":"430","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":16},{"ruleId":"475","severity":1,"message":"476","line":26,"column":1,"nodeType":"435","endLine":26,"endColumn":32},{"ruleId":"442","severity":1,"message":"443","line":26,"column":1,"nodeType":"435","endLine":26,"endColumn":32},{"ruleId":"442","severity":1,"message":"444","line":27,"column":7,"nodeType":"435","endLine":27,"endColumn":45},{"ruleId":"429","severity":1,"message":"456","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":49},{"ruleId":"429","severity":1,"message":"457","line":1,"column":50,"nodeType":"431","messageId":"432","endLine":1,"endColumn":62},{"ruleId":"429","severity":1,"message":"458","line":4,"column":23,"nodeType":"431","messageId":"432","endLine":4,"endColumn":33},{"ruleId":"429","severity":1,"message":"474","line":6,"column":9,"nodeType":"431","messageId":"432","endLine":6,"endColumn":15},{"ruleId":"429","severity":1,"message":"465","line":2,"column":29,"nodeType":"431","messageId":"432","endLine":2,"endColumn":33},{"ruleId":"429","severity":1,"message":"466","line":2,"column":42,"nodeType":"431","messageId":"432","endLine":2,"endColumn":48},{"ruleId":"429","severity":1,"message":"467","line":2,"column":68,"nodeType":"431","messageId":"432","endLine":2,"endColumn":75},{"ruleId":"429","severity":1,"message":"468","line":3,"column":31,"nodeType":"431","messageId":"432","endLine":3,"endColumn":50},{"ruleId":"429","severity":1,"message":"469","line":3,"column":87,"nodeType":"431","messageId":"432","endLine":3,"endColumn":99},{"ruleId":"442","severity":1,"message":"444","line":248,"column":25,"nodeType":"435","endLine":248,"endColumn":28},{"ruleId":"470","severity":1,"message":"471","line":265,"column":7,"nodeType":"472","messageId":"473","endLine":265,"endColumn":16},{"ruleId":"429","severity":1,"message":"456","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":49},{"ruleId":"429","severity":1,"message":"457","line":1,"column":50,"nodeType":"431","messageId":"432","endLine":1,"endColumn":62},{"ruleId":"429","severity":1,"message":"458","line":4,"column":23,"nodeType":"431","messageId":"432","endLine":4,"endColumn":33},{"ruleId":"429","severity":1,"message":"474","line":6,"column":9,"nodeType":"431","messageId":"432","endLine":6,"endColumn":15},{"ruleId":"429","severity":1,"message":"446","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":20},{"ruleId":"429","severity":1,"message":"477","line":5,"column":10,"nodeType":"431","messageId":"432","endLine":5,"endColumn":15},{"ruleId":"429","severity":1,"message":"478","line":6,"column":10,"nodeType":"431","messageId":"432","endLine":6,"endColumn":21},{"ruleId":"429","severity":1,"message":"479","line":7,"column":10,"nodeType":"431","messageId":"432","endLine":7,"endColumn":25},{"ruleId":"429","severity":1,"message":"430","line":11,"column":10,"nodeType":"431","messageId":"432","endLine":11,"endColumn":16},{"ruleId":"429","severity":1,"message":"480","line":11,"column":18,"nodeType":"431","messageId":"432","endLine":11,"endColumn":23},{"ruleId":"429","severity":1,"message":"462","line":11,"column":25,"nodeType":"431","messageId":"432","endLine":11,"endColumn":28},{"ruleId":"429","severity":1,"message":"461","line":11,"column":30,"nodeType":"431","messageId":"432","endLine":11,"endColumn":33},{"ruleId":"429","severity":1,"message":"465","line":2,"column":29,"nodeType":"431","messageId":"432","endLine":2,"endColumn":33},{"ruleId":"429","severity":1,"message":"466","line":2,"column":42,"nodeType":"431","messageId":"432","endLine":2,"endColumn":48},{"ruleId":"429","severity":1,"message":"467","line":2,"column":68,"nodeType":"431","messageId":"432","endLine":2,"endColumn":75},{"ruleId":"470","severity":1,"message":"471","line":236,"column":7,"nodeType":"472","messageId":"473","endLine":236,"endColumn":16},{"ruleId":"429","severity":1,"message":"445","line":2,"column":39,"nodeType":"431","messageId":"432","endLine":2,"endColumn":49},{"ruleId":"429","severity":1,"message":"465","line":2,"column":29,"nodeType":"431","messageId":"432","endLine":2,"endColumn":33},{"ruleId":"429","severity":1,"message":"466","line":2,"column":42,"nodeType":"431","messageId":"432","endLine":2,"endColumn":48},{"ruleId":"429","severity":1,"message":"467","line":2,"column":68,"nodeType":"431","messageId":"432","endLine":2,"endColumn":75},{"ruleId":"429","severity":1,"message":"479","line":3,"column":67,"nodeType":"431","messageId":"432","endLine":3,"endColumn":82},{"ruleId":"429","severity":1,"message":"456","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":49},{"ruleId":"429","severity":1,"message":"457","line":1,"column":50,"nodeType":"431","messageId":"432","endLine":1,"endColumn":62},{"ruleId":"429","severity":1,"message":"458","line":4,"column":23,"nodeType":"431","messageId":"432","endLine":4,"endColumn":33},{"ruleId":"429","severity":1,"message":"481","line":2,"column":24,"nodeType":"431","messageId":"432","endLine":2,"endColumn":32},{"ruleId":"429","severity":1,"message":"430","line":2,"column":34,"nodeType":"431","messageId":"432","endLine":2,"endColumn":40},{"ruleId":"442","severity":1,"message":"443","line":30,"column":18,"nodeType":"435","endLine":30,"endColumn":29},{"ruleId":"442","severity":1,"message":"443","line":8,"column":12,"nodeType":"435","endLine":8,"endColumn":23},{"ruleId":"442","severity":1,"message":"443","line":12,"column":12,"nodeType":"435","endLine":12,"endColumn":23},{"ruleId":"442","severity":1,"message":"444","line":30,"column":5,"nodeType":"435","endLine":30,"endColumn":44},{"ruleId":"429","severity":1,"message":"482","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":20},{"ruleId":"429","severity":1,"message":"480","line":2,"column":23,"nodeType":"431","messageId":"432","endLine":2,"endColumn":28},{"ruleId":"429","severity":1,"message":"482","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":20},{"ruleId":"483","severity":1,"message":"484","line":13,"column":1,"nodeType":"435","endLine":23,"endColumn":9},{"ruleId":"429","severity":1,"message":"485","line":6,"column":10,"nodeType":"431","messageId":"432","endLine":6,"endColumn":22},{"ruleId":"429","severity":1,"message":"453","line":3,"column":38,"nodeType":"431","messageId":"432","endLine":3,"endColumn":43},{"ruleId":"429","severity":1,"message":"486","line":15,"column":21,"nodeType":"431","messageId":"432","endLine":15,"endColumn":33},{"ruleId":"429","severity":1,"message":"457","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":22},{"ruleId":"429","severity":1,"message":"430","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":16},{"ruleId":"429","severity":1,"message":"458","line":3,"column":23,"nodeType":"431","messageId":"432","endLine":3,"endColumn":33},{"ruleId":"429","severity":1,"message":"487","line":3,"column":35,"nodeType":"431","messageId":"432","endLine":3,"endColumn":41},{"ruleId":"429","severity":1,"message":"480","line":3,"column":69,"nodeType":"431","messageId":"432","endLine":3,"endColumn":74},{"ruleId":"429","severity":1,"message":"474","line":4,"column":9,"nodeType":"431","messageId":"432","endLine":4,"endColumn":15},{"ruleId":"429","severity":1,"message":"488","line":6,"column":10,"nodeType":"431","messageId":"432","endLine":6,"endColumn":14},{"ruleId":"429","severity":1,"message":"489","line":7,"column":9,"nodeType":"431","messageId":"432","endLine":7,"endColumn":19},{"ruleId":"429","severity":1,"message":"490","line":10,"column":9,"nodeType":"431","messageId":"432","endLine":10,"endColumn":16},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavLink' is defined but never used.","'UserOutlined' is defined but never used.","'theme' is defined but never used.","'op_registrar' is defined but never used.","'op_listar' is defined but never used.","'op_estadistica' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Typography' is defined but never used.","'Charpclien' is defined but never used.","'chapcl' is assigned a value but never used.","'navigate' is assigned a value but never used.","'op_provedores' is defined but never used.","'items' is assigned a value but never used.","'itemspr' is assigned a value but never used.","'Divider' is defined but never used.","'Radio' is defined but never used.","'setSelectionType' is assigned a value but never used.","'Flobott' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'DatePicker' is defined but never used.","Parsing error: Identifier 'React' has already been declared. (200:7)","'SmileFilled' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'getItem' is defined but never used.","'cerrarSesion' is defined but never used.","'Form' is defined but never used.","'Select' is defined but never used.","'Tooltip' is defined but never used.","'CloseCircleOutlined' is defined but never used.","'DownOutlined' is defined but never used.","no-dupe-keys","Duplicate key 'dataIndex'.","ObjectExpression","unexpected","'Option' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'Charp' is defined but never used.","'TablaReport' is defined but never used.","'PrinterOutlined' is defined but never used.","'Space' is defined but never used.","'Dropdown' is defined but never used.","'EditarLogo' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'MapComponent' is defined but never used.","'setPlacement' is assigned a value but never used.","'Drawer' is defined but never used.","'open' is assigned a value but never used.","'showDrawer' is assigned a value but never used.","'onClose' is assigned a value but never used."]